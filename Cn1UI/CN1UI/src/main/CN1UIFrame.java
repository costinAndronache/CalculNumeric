/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import cnjava1.MatrixSource;
import cnjava1.VectorSource;
import java.io.File;
import java.text.*;
import javax.swing.JFileChooser;

/**
 *
 * @author Costi
 */
public class CN1UIFrame extends javax.swing.JFrame {

    /**
     * Creates new form CN1UIFrame
     */
    public CN1UIFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        vectorMatrixTextArea = new javax.swing.JTextArea();
        vectorFromFile = new javax.swing.JButton();
        matrixFromKeyboard = new javax.swing.JButton();
        machinePrecisionTF = new javax.swing.JTextField();
        machinePrecisionButton = new javax.swing.JButton();
        additionAssociativityButton = new javax.swing.JButton();
        precision = new javax.swing.JTextField();
        associativityPrecisionInput = new javax.swing.JTextField();
        associativeStatusLabel = new javax.swing.JLabel();
        associativityFirstNumTF = new javax.swing.JTextField();
        additionAssociativityButton1 = new javax.swing.JButton();
        tanComputeBtn = new javax.swing.JButton();
        xTF = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        mathTanTF = new javax.swing.JTextField();
        lentzTanTF = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        epsTF = new javax.swing.JTextField();
        vectorFromKeyboard = new javax.swing.JButton();
        matrixFromFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        vectorMatrixTextArea.setColumns(20);
        vectorMatrixTextArea.setRows(5);
        jScrollPane1.setViewportView(vectorMatrixTextArea);

        vectorFromFile.setText("Read vector from file");
        vectorFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorFromFileActionPerformed(evt);
            }
        });

        matrixFromKeyboard.setText("Read matrix from keyboard");
        matrixFromKeyboard.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        matrixFromKeyboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixFromKeyboardActionPerformed(evt);
            }
        });

        machinePrecisionTF.setEditable(false);
        machinePrecisionTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        machinePrecisionTF.setText("0");

        machinePrecisionButton.setText("Compute machine precision");
        machinePrecisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                machinePrecisionButtonActionPerformed(evt);
            }
        });

        additionAssociativityButton.setText("Compute addition associativity for:");
        additionAssociativityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionAssociativityButtonActionPerformed(evt);
            }
        });

        precision.setEditable(false);
        precision.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        precision.setText("preicison:");
        precision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precisionActionPerformed(evt);
            }
        });

        associativityPrecisionInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        associativityPrecisionInput.setText("0");

        associativeStatusLabel.setText("-");

        associativityFirstNumTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        associativityFirstNumTF.setText("0");

        additionAssociativityButton1.setText("Compute multiplication associativity for:");
        additionAssociativityButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionAssociativityButton1ActionPerformed(evt);
            }
        });

        tanComputeBtn.setText("Compute tan for x:");
        tanComputeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanComputeBtnActionPerformed(evt);
            }
        });

        xTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        xTF.setText("0.0");

        jTextField1.setEditable(false);
        jTextField1.setText("Math.tan:");

        jTextField2.setEditable(false);
        jTextField2.setText("Modified Lentz:");

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField3.setText("with epsilon:");

        epsTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        epsTF.setText("0.0");

        vectorFromKeyboard.setText("Read vector from keyboard");
        vectorFromKeyboard.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        vectorFromKeyboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vectorFromKeyboardActionPerformed(evt);
            }
        });

        matrixFromFile.setText("Read matrix from file");
        matrixFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixFromFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(associativityFirstNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(precision, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(associativityPrecisionInput, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(associativeStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(vectorFromFile)
                            .addComponent(vectorFromKeyboard, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(matrixFromFile)
                            .addComponent(matrixFromKeyboard))
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(additionAssociativityButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(additionAssociativityButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(machinePrecisionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(machinePrecisionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tanComputeBtn)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(xTF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(epsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lentzTanTF, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mathTanTF, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(machinePrecisionButton)
                    .addComponent(machinePrecisionTF, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addComponent(additionAssociativityButton)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precision)
                    .addComponent(associativityPrecisionInput)
                    .addComponent(associativeStatusLabel)
                    .addComponent(associativityFirstNumTF))
                .addGap(11, 11, 11)
                .addComponent(additionAssociativityButton1)
                .addGap(44, 44, 44)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mathTanTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tanComputeBtn)
                    .addComponent(xTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lentzTanTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vectorFromFile)
                            .addComponent(matrixFromFile))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matrixFromKeyboard)
                            .addComponent(vectorFromKeyboard))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vectorFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorFromFileActionPerformed
        // TODO add your handling code here:
        
        File file = this.pickFileFromUser();
        if(file != null)
        {
            try {
                cnjava1.VectorSource vs = new cnjava1.FileVectorSource(file);
                this.displayVectorFromSource(vs);
            } catch (Exception ex) 
            {
                vectorMatrixTextArea.setText("Something went wrong. Please try again");
            }
             
        }
        
    }//GEN-LAST:event_vectorFromFileActionPerformed

    private void displayVectorFromSource(VectorSource vs)
    {
                double[] vector = cnjava1.CNJava1.readVector(vs);
                String display = cnjava1.CNJava1.printVector(vector);
                vectorMatrixTextArea.setText(display);
    }
    
    private void matrixFromKeyboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixFromKeyboardActionPerformed
        // TODO add your handling code here:
        this.displayMatrixFromSource(new cnjava1.KeyboardMatrixSource());
    }//GEN-LAST:event_matrixFromKeyboardActionPerformed

    private void displayMatrixFromSource(MatrixSource ms)
    {
       double[][] matrix = cnjava1.CNJava1.readMatrix(ms);
       String display = cnjava1.CNJava1.printMatrix(matrix);
       vectorMatrixTextArea.setText(display);
    }
    
    private void precisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precisionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precisionActionPerformed

    private void additionAssociativityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionAssociativityButtonActionPerformed
        // TODO add your handling code here:
        
        double firstNum = Double.valueOf(associativityFirstNumTF.getText());
        double precision = Double.valueOf(associativityPrecisionInput.getText());
        
        String status = "TRUE";
        if(cnjava1.CNJava1.isSummationAssociative(firstNum, precision) == false)
            status = "FALSE";
        
        associativeStatusLabel.setText(status);
        
    }//GEN-LAST:event_additionAssociativityButtonActionPerformed

    private void additionAssociativityButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionAssociativityButton1ActionPerformed
        // TODO add your handling code here:
        
        double firstNum = Double.valueOf(associativityFirstNumTF.getText());
        double precision = Double.valueOf(associativityPrecisionInput.getText());
        
        String status = "TRUE";
        if(cnjava1.CNJava1.isMultiplicationAssociative(firstNum, precision) == false)
            status = "FALSE";
        
        associativeStatusLabel.setText(status);
    }//GEN-LAST:event_additionAssociativityButton1ActionPerformed

    private void machinePrecisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_machinePrecisionButtonActionPerformed
        // TODO add your handling code here:
        
        double machinePrecision = cnjava1.CNJava1.computeSummationPrecision();
        DecimalFormat format = new DecimalFormat("0.##E0");
        machinePrecisionTF.setText(format.format(machinePrecision));
    }//GEN-LAST:event_machinePrecisionButtonActionPerformed

    private void tanComputeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanComputeBtnActionPerformed
        // TODO add your handling code here:
        
        double x = Double.valueOf(xTF.getText());
        double eps = Double.valueOf(epsTF.getText());
        
        x = makeXOk(x);
        
        double mathTan = Math.tan(x);
        double lentzTan = cnjava1.CNJava1.modifiedLentzTan(x, eps);
        
        mathTanTF.setText("" + mathTan);
        lentzTanTF.setText("" + lentzTan);
        
    }//GEN-LAST:event_tanComputeBtnActionPerformed

    private double makeXOk(double x)
    {
        double eps = 1E-1;
        
        double absX = Math.abs(x);
        double modResult = absX % (Math.PI/2);
        
        if(Math.abs(modResult - 1) < eps)
        {
            return Math.PI/4;
        }
        
        double normX = absX % Math.PI;
        
        if(x < 0)
            normX = -normX;
        
        return normX;
    }
    
    private void vectorFromKeyboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vectorFromKeyboardActionPerformed
        // TODO add your handling code here:
        
        this.displayVectorFromSource(new cnjava1.KeyboardVectorSource());
    }//GEN-LAST:event_vectorFromKeyboardActionPerformed

    private void matrixFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixFromFileActionPerformed
        // TODO add your handling code here:
                File file = this.pickFileFromUser();
        if(file != null)
        {
            try {
                cnjava1.MatrixSource vs = new cnjava1.FileMatrixSource(file);
                this.displayMatrixFromSource(vs);
            } catch (Exception ex) 
            {
                vectorMatrixTextArea.setText("Something went wrong. Please try again");
            }
             
        }
    }//GEN-LAST:event_matrixFromFileActionPerformed

    
    private File pickFileFromUser()
    {
        JFileChooser fileChooser = new JFileChooser();
        
        int returnVal = fileChooser.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
            return fileChooser.getSelectedFile();
        }
        else
            return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CN1UIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CN1UIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CN1UIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CN1UIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CN1UIFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton additionAssociativityButton;
    private javax.swing.JButton additionAssociativityButton1;
    private javax.swing.JLabel associativeStatusLabel;
    private javax.swing.JTextField associativityFirstNumTF;
    private javax.swing.JTextField associativityPrecisionInput;
    private javax.swing.JTextField epsTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField lentzTanTF;
    private javax.swing.JButton machinePrecisionButton;
    private javax.swing.JTextField machinePrecisionTF;
    private javax.swing.JTextField mathTanTF;
    private javax.swing.JButton matrixFromFile;
    private javax.swing.JButton matrixFromKeyboard;
    private javax.swing.JTextField precision;
    private javax.swing.JButton tanComputeBtn;
    private javax.swing.JButton vectorFromFile;
    private javax.swing.JButton vectorFromKeyboard;
    private javax.swing.JTextArea vectorMatrixTextArea;
    private javax.swing.JTextField xTF;
    // End of variables declaration//GEN-END:variables
}
